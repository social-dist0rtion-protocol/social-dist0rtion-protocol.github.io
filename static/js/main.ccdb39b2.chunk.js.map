{"version":3,"sources":["Home.js","util.js","Redeem.js","NotFound.js","Visualize.js","LeaderBoard.js","AppRouter.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","href","Component","CONTRACTS","HuntZuckerberg","require","resolveWeb3","resolve","localProvider","authentication","web3","window","ethereum","Web3","enable","then","err","console","log","currentProvider","Error","concat","_getWeb3","undefined","Promise","addEventListener","document","readyState","getWeb3Anon","toHexAndPad","i","padding","Web3Utils","padLeft","toHex","getContract","_x2","_x3","_getContract","apply","this","arguments","_callee2","name","metadata","networkId","contractAbi","contractAddress","contract","regenerator_default","wrap","_context2","prev","next","eth","net","getId","sent","abi","networks","address","Contract","abrupt","stop","IMAGE_CONFIG","Redeem","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","getWeb3","getAccounts","account","methods","redeem","match","params","token","send","from","hashedCodeToPlayer","keccak256","tokenToPlayer","setState","isTokenRedeemed","hexToken","image","src","alt","disabled","onClick","handleRedeem","bind","target","rel","Link","to","withRouter","NotFound","Visualize","activatedCodes","owners","getActivatedHashedCodes","code","map","_ref","asyncToGenerator","mark","_callee","_context","_this2","setTimeout","updateCodes","_this$state","style","position","margin","width","height","_IMAGE_CONFIG$code","left","top","key","LeaderBoard","_ref3","_x","items","keys","k","sort","b","_ref4","_ref5","slicedToArray","owner","tokens","lib_default","diameter","seed","jsNumberForAddress","AppRouter","HashRouter","Switch","Route","path","exact","component","Boolean","location","hostname","ReactDOM","render","src_AppRouter","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ccdb39b2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <h1>Refreshing memories of \"MARK ZUCKERBERG\"</h1>\n        <p>\n          It's the year 2055.\n          <br />\n          MARK ZUCKERBERG uploaded itself in the Ethereum Network because\n          blockchain and stuff and user data and Ads.\n          <br />\n          HELP US finding The MARK pieces and stop it!\n          <br />\n        </p>\n        <p>\n          Each piece of Mark (a ZUCKERBIT) is a token. You can find them by\n          searching QR codes about MARK at the CCC. You will recognize them as\n          soon as you find them.\n          <br />\n          Each token can be redeemed with and Ethereum transaction (so you will\n          need wallet enabled browser and some Ether on Rinkeby).\n          <br />\n          Once you find a ZUCKERBIT, you can come to the Social Dist0rtion\n          Protocol assembly and redeem a prize. The winner will get a YUBI\n          key!!!111 one\n        </p>\n        <h1>Requirements</h1>\n        <ul>\n          <li>\n            A wallet enabled browser or extension: Metamask on desktop, Cipher\n            on mobile\n          </li>\n          <li>\n            An Ethereum wallet with Ether on the Rinkeby test network, so no\n            real money involved. We can also send you some if you need.\n          </li>\n        </ul>\n        <h1>Support</h1>\n        <ul>\n          <li>\n            Come to the{\" \"}\n            <a href=\"https://35c3.c3nav.de/l/social-dist0rtion-protocol/\">\n              Social Dist0rtion Protocol assembly\n            </a>{\" \"}\n            if you want to talk to <b>real people</b>.\n          </li>\n          <li>\n            DECT numbers:\n            <ul>\n              <li>vrde: 6665</li>\n              <li>sirnicolaz: 6616</li>\n            </ul>\n          </li>\n        </ul>\n        <h1>Prizes</h1>\n        <ul>\n          <li>\n            For each unlocked MARK piece:\n            <ul>\n              <li>Grappa</li>\n              <li>Berliner Luft</li>\n              <li>Maybe other stuff? :j</li>\n            </ul>\n          </li>\n          <li>\n            For the winner (most ZUCKERBITS collected): a brand new{\" \"}\n            <b>Yubi Key</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import Web3 from \"web3\";\nimport Web3Utils from \"web3-utils\";\n\nconst CONTRACTS = {\n  HuntZuckerberg: require(\"./resources/contracts/HuntZuckerberg.json\")\n};\n\nfunction resolveWeb3(resolve, localProvider, authentication) {\n  let web3;\n\n  if (window.ethereum) {\n    web3 = new Web3(window.ethereum);\n    if (authentication === true) {\n      try {\n        window.ethereum.enable().then(() => resolve(web3));\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      resolve(web3);\n    }\n  } else if (window.web3) {\n    web3 = new Web3(window.web3.currentProvider);\n    resolve(web3);\n  } else {\n    if (authentication === true) {\n      throw new Error(\n        \"Non-Ethereum browser detected. Cannot work in authenticated mode\"\n      );\n    }\n    web3 = new Web3(localProvider);\n    console.log(`Non-Ethereum browser detected. Using ${localProvider}.`);\n    resolve(web3);\n  }\n}\n\nfunction _getWeb3(localProvider, authentication) {\n  if (localProvider === undefined) {\n    localProvider =\n      process.env.NODE_ENV === \"development\"\n        ? \"http://localhost:8545\"\n        : \"https://rinkeby.infura.io/\";\n  }\n\n  return new Promise(resolve => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", () => {\n      resolveWeb3(resolve, localProvider, authentication);\n    });\n    // If document has loaded already, try to get Web3 immediately.\n    if (document.readyState === \"complete\") {\n      resolveWeb3(resolve, localProvider, authentication);\n    }\n  });\n}\n\nexport function getWeb3(localProvider) {\n  return _getWeb3(localProvider, true);\n}\n\nexport function getWeb3Anon(localProvider) {\n  return _getWeb3(localProvider, false);\n}\n\nexport function isWallet() {\n  return !!(window.web3 || window.ethereum);\n}\n\nexport function toHexAndPad(i, padding) {\n  if (padding === undefined) {\n    padding = 64;\n  }\n  return Web3Utils.padLeft(Web3Utils.toHex(i), padding);\n}\n\nexport async function isConnected(web3) {\n  const networkId = await web3.eth.net.getId();\n  return networkId === 4;\n}\n\nexport async function getContract(web3, name) {\n  const metadata = CONTRACTS[name];\n  const networkId = await web3.eth.net.getId();\n  const contractAbi = metadata.abi;\n  const contractAddress = metadata.networks[networkId].address;\n  const contract = new web3.eth.Contract(contractAbi, contractAddress);\n  return contract;\n}\n","import React, { Component } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport Web3Utils from \"web3-utils\";\nimport { getWeb3, getWeb3Anon, getContract, isWallet } from \"./util\";\n\nconst IMAGE_CONFIG = require(\"./resources/image_config\");\n\nclass Redeem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async handleRedeem() {\n    const web3 = await getWeb3();\n    const account = (await web3.eth.getAccounts())[0];\n    const contract = await getContract(web3, \"HuntZuckerberg\");\n    contract.methods\n      .redeem(this.props.match.params.token)\n      .send({ from: account });\n  }\n\n  async componentDidMount() {\n    const web3 = await getWeb3Anon();\n    const contract = await getContract(web3, \"HuntZuckerberg\");\n    window.contract = contract;\n    const tokenToPlayer = await contract.methods\n      .hashedCodeToPlayer(Web3Utils.keccak256(this.props.match.params.token))\n      .call();\n    console.log(tokenToPlayer);\n    this.setState({\n      isTokenRedeemed:\n        tokenToPlayer !== \"0x0000000000000000000000000000000000000001\"\n    });\n  }\n\n  render() {\n    const token = this.props.match.params.token;\n    const hexToken = Web3Utils.keccak256(token);\n    if (!IMAGE_CONFIG[hexToken]) {\n      return <h1>Invalid Token</h1>;\n    }\n    const { isTokenRedeemed } = this.state;\n    const { image } = IMAGE_CONFIG[hexToken];\n\n    return (\n      <div className=\"Redeem\">\n        <h1>You've found a ZUCKERBIT!</h1>\n\n        <p>\n          Mark Zuckerberg has been decentralized and spread around the 35c3.\n          Redeem this token and help us reassemble the ZUCKERBITS into a\n          ZUCKERBERG.\n        </p>\n        <div className=\"token\">\n          <h2>{token}</h2>\n          <img src={`./images/puzzle/${image}`} alt=\"\" />\n          <button\n            disabled={isTokenRedeemed}\n            onClick={this.handleRedeem.bind(this)}\n          >\n            Redeem\n          </button>\n        </div>\n\n        {!isWallet() && (\n          <div className=\"alert warning\">\n            <p>\n              You are not using an Ethereum compatible browser. In order to\n              redeem the token, you need to install{\" \"}\n              <a\n                href=\"https://metamask.io/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                MetaMask\n              </a>{\" \"}\n              on your browser.\n            </p>\n          </div>\n        )}\n        <h2>What is this?</h2>\n        <p>This game works on the Ethereum Rinkeby blockchain.</p>\n        <p>\n          Read how it works in the <Link to=\"/about\">about page</Link>, and make\n          sure to visit us at the assembly table.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Redeem);\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found</h2>\n    <p>Nothing can be found at this URL. Go somewhere else.</p>\n  </div>\n);\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { getWeb3Anon, getContract, toHexAndPad } from \"./util\";\nconst IMAGE_CONFIG = require(\"./resources/image_config\");\n\nclass Visualize extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { activatedCodes: [], owners: {} };\n  }\n\n  async updateCodes(account, contract) {\n    const activatedCodes = (\n      (await contract.methods.getActivatedHashedCodes().call()) || []\n    ).map(code => toHexAndPad(code));\n    this.setState({\n      activatedCodes: activatedCodes,\n      account: account\n    });\n    activatedCodes.map(async code => {\n      const tokenToPlayer = await contract.methods\n        .hashedCodeToPlayer(code)\n        .call();\n      const owners = this.state.owners;\n      owners[code] = tokenToPlayer;\n      this.setState({ owners: owners });\n    });\n    setTimeout(async () => await this.updateCodes(account, contract), 2000);\n  }\n\n  async componentDidMount() {\n    const web3 = await getWeb3Anon();\n    const [account = \"none\"] = await web3.eth.getAccounts();\n    const contract = await getContract(web3, \"HuntZuckerberg\");\n    await this.updateCodes(account, contract);\n  }\n\n  render() {\n    let { activatedCodes, account, owners } = this.state;\n    if (!activatedCodes) {\n      activatedCodes = [];\n    }\n    return (\n      <div className=\"Visualize\">\n        <div\n          style={{\n            position: \"relative\",\n            margin: \"auto\",\n            width: \"2480px\",\n            height: \"1656px\"\n          }}>\n          {activatedCodes.map(function(code) {\n            const { image, left, top, width, height } = IMAGE_CONFIG[code];\n\n            return (\n              <div\n                key={code}\n                className={owners[code] === account ? \"mine\" : \"\"}\n                style={{\n                  position: \"absolute\",\n                  left: left,\n                  top: top,\n                  width: width,\n                  height: height\n                }}>\n                <img\n                  src={`./images/puzzle/${image}`}\n                  width={width}\n                  height={height}\n                  alt=\"\"\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Visualize;\n","import React, { Component } from \"react\";\nimport { getWeb3Anon, getContract, toHexAndPad } from \"./util\";\nimport Jazzicon, { jsNumberForAddress } from \"react-jazzicon\";\n\nconst IMAGE_CONFIG = require(\"./resources/image_config\");\n\nclass LeaderBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { owners: {} };\n  }\n\n  async componentDidMount() {\n    const web3 = await getWeb3Anon();\n    const [account = \"none\"] = await web3.eth.getAccounts();\n    const contract = await getContract(web3, \"HuntZuckerberg\");\n    const activatedCodes = (\n      (await contract.methods.getActivatedHashedCodes().call()) || []\n    ).map(code => toHexAndPad(code));\n    this.setState({\n      account: account\n    });\n    activatedCodes.map(async code => {\n      const tokenToPlayer = await contract.methods\n        .hashedCodeToPlayer(code)\n        .call();\n      const owners = this.state.owners;\n      owners[tokenToPlayer] = (owners[tokenToPlayer] || 0) + 1;\n      this.setState({ owners: owners });\n    });\n  }\n\n  render() {\n    let { account, owners } = this.state;\n    let items = Object.keys(owners).map(k => [k, owners[k]]);\n    items.sort((a, b) => a[1] - b[1]);\n    return (\n      <div className=\"LeaderBoard\">\n        <h1>Leader Board</h1>\n        <p>List of all players and tokens redeemed</p>\n        <ol>\n          {items.map(([owner, tokens]) => (\n            <li key={owner}>\n              <span className=\"jazzicon\">\n                <span className=\"tokens\">{tokens}</span>\n                <Jazzicon diameter={100} seed={jsNumberForAddress(owner)} />\n              </span>\n              <span className=\"owner\">{owner}</span>\n            </li>\n          ))}\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default LeaderBoard;\n","import React from \"react\";\nimport Home from \"./Home\";\nimport Redeem from \"./Redeem\";\nimport NotFound from \"./NotFound\";\nimport Visualize from \"./Visualize\";\nimport LeaderBoard from \"./LeaderBoard\";\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\nconst AppRouter = () => (\n  <Router>\n    <div>\n      <header>\n        <h1>Hunt Zuckerberg</h1>\n        <h2>35c3 treasure hunt game!</h2>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">The Game</Link>\n            </li>\n            <li>\n              <Link to=\"/visualize/\">Current State</Link>\n            </li>\n            <li>\n              <Link to=\"/leader-board/\">Leader Board</Link>\n            </li>\n          </ul>\n        </nav>\n      </header>\n\n      <main>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/redeem/:token\" component={Redeem} />\n          <Route path=\"/visualize/\" component={Visualize} />\n          <Route path=\"/leader-board/\" component={LeaderBoard} />\n          <Route component={NotFound} />\n        </Switch>\n      </main>\n    </div>\n  </Router>\n);\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppRouter from \"./AppRouter\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}